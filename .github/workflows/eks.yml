name: AWS ECR push
on:
  push:
    branches: 
      - main
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        node-version: 16.3.2  
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2 
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

  
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_REACT_APP_GOOGLE_API: ${{ secrets.REACT_APP_GOOGLE_API}}
        envkey_REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:

        REACT_APP_SOMETHING: ${{ secrets.REACT_APP_SOMETHING }}
        REACT_APP_GOOGLE_API: AIzaSyBkXfBuW-KEHGMLXaIC_nVMTDOl3ZZxgps
        # REACT_APP_BASE_URL: "https://freecode.aesthisia.in/api/"
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  
        
    
    - name: deploy to cluster
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}     
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ github.sha }}
        KUBECTL_VERSION: "v1.23.6"
      with:
        args: set image --namespace freekode deployment/freekode  freekode-repo=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG     
